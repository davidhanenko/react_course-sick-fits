{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_MUTATION(\\n    $id: ID$\\n    $name: String\\n    $description: String \\n    $price: Int\\n  ) {\\n    updateProduct(\\n      id: $id\\n      data: {\\n        id: $id,\\n        name: $name,\\n        description: $description\\n      }\\n    )\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      name\\n      price\\n      description\\n      id\\n      photo {\\n        altText\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  // Existing product\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update \", id, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UpdateProduct, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/UpdateProduct.js"],"names":["useQuery","gql","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","loading","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;AAiBA,IAAME,uBAAuB,GAAGF,GAAH,oBAA7B;AAmBA,eAAe,SAASG,aAAT,OAA+B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAC5C;AAD4C,kBAEXL,QAAQ,CAACE,oBAAD,EAAuB;AAC9DI,IAAAA,SAAS,EAAE;AACTD,MAAAA,EAAE,EAAFA;AADS;AADmD,GAAvB,CAFG;AAAA,MAEpCE,IAFoC,aAEpCA,IAFoC;AAAA,MAE9BC,OAF8B,aAE9BA,OAF8B;AAAA,MAErBC,KAFqB,aAErBA,KAFqB;;AAQ5C,sBAAO;AAAA,0BAAWJ,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GATuBD,a;UAEWJ,Q;;;KAFXI,a","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      name\n      price\n      description\n      id\n      photo {\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID$\n    $name: String\n    $description: String \n    $price: Int\n  ) {\n    updateProduct(\n      id: $id\n      data: {\n        id: $id,\n        name: $name,\n        description: $description\n      }\n    )\n  }\n`;\n\n\nexport default function UpdateProduct({ id }) {\n  // Existing product\n  const { data, loading, error } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id,\n    },\n  });\n\n  return <p>Update {id} </p>;\n}\n"]},"metadata":{},"sourceType":"module"}