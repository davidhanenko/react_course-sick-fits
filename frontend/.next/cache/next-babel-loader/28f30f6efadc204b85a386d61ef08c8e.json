{"ast":null,"code":"import _slicedToArray from \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/RemoveCartItem.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REMOVE_CART_ITEM_MUTATION($id: ID!) {\\n    deleteCartItem(id: $id) {\\n      id\\n      quantity\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useUser } from './User';\nvar REMOVE_CART_ITEM_MUTATION = gql(_templateObject());\n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteCartItem));\n}\n\nexport default function RemoveCartItem(_ref) {\n  _s();\n\n  var id = _ref.id;\n  var me = useUser();\n\n  var _useMutation = useMutation(REMOVE_CART_ITEM_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteCartItem = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      data = _useMutation2$.data;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      var item = me.cart.filter(function (el) {\n        return el.id === id;\n      });\n      item[0].quantity > 1 ? item[0].quantity : deleteCartItem();\n    },\n    children: \"\\uD83D\\uDDD1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RemoveCartItem, \"phMJdzW/w6oUbE2abxvvBObliYs=\", false, function () {\n  return [useUser, useMutation];\n});\n\n_c = RemoveCartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoveCartItem\");","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/RemoveCartItem.js"],"names":["useMutation","gql","useUser","REMOVE_CART_ITEM_MUTATION","update","cache","payload","evict","identify","data","deleteCartItem","RemoveCartItem","id","me","variables","loading","item","cart","filter","el","quantity"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,IAAMC,yBAAyB,GAAGF,GAAH,mBAA/B;;AASA,SAASG,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC9BD,EAAAA,KAAK,CAACE,KAAN,CAAYF,KAAK,CAACG,QAAN,CAAeF,OAAO,CAACG,IAAR,CAAaC,cAA5B,CAAZ;AACD;;AAED,eAAe,SAASC,cAAT,OAAgC;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;AAC7C,MAAMC,EAAE,GAAGX,OAAO,EAAlB;;AAD6C,qBAGDF,WAAW,CACrDG,yBADqD,EAErD;AACEW,IAAAA,SAAS,EAAE;AACTF,MAAAA,EAAE,EAAFA;AADS,KADb;AAIER,IAAAA,MAAM,EAANA;AAJF,GAFqD,CAHV;AAAA;AAAA,MAGtCM,cAHsC;AAAA;AAAA,MAGpBK,OAHoB,kBAGpBA,OAHoB;AAAA,MAGXN,IAHW,kBAGXA,IAHW;;AAa7C,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,mBAAM;AACf,UAAIO,IAAI,GAAGH,EAAE,CAACI,IAAH,CAAQC,MAAR,CAAe,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACP,EAAH,KAAUA,EAAd;AAAA,OAAjB,CAAX;AACEI,MAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQI,QAAR,GAAmB,CAAnB,GAAuBJ,IAAI,CAAC,CAAD,CAAJ,CAAQI,QAA/B,GACAV,cAAc,EADd;AAED,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAzBuBC,c;UACXT,O,EAEiCF,W;;;KAHtBW,c","sourcesContent":["import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useUser } from './User';\n\nconst REMOVE_CART_ITEM_MUTATION = gql`\n  mutation REMOVE_CART_ITEM_MUTATION($id: ID!) {\n    deleteCartItem(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteCartItem));\n}\n\nexport default function RemoveCartItem({ id }) {\n  const me = useUser();\n\n  const [deleteCartItem, { loading, data }] = useMutation(\n    REMOVE_CART_ITEM_MUTATION,\n    {\n      variables: {\n        id,\n      },\n      update,\n    }\n  );\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n      let item = me.cart.filter(el => el.id === id)\n        item[0].quantity > 1 ? item[0].quantity :\n        deleteCartItem();\n      }}\n    >\n      ðŸ—‘\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}