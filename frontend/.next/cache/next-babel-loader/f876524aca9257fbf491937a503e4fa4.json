{"ast":null,"code":"import _defineProperty from \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/Search.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\\n    searchTerms: allProducts(\\n      where: {\\n        OR: [\\n          { name_contains_i: $searchTerm }\\n          { description_contains_i: $searchTerm }\\n        ]\\n      }\\n    ) {\\n      # rename Keystone query to our own\\n      id\\n      name\\n      photo {\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nvar SEARCH_PRODUCTS_QUERY = gql(_templateObject());\nexport default function Search() {\n  _s();\n\n  var _this = this;\n\n  var _useLazyQuery = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      findItems = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      loading = _useLazyQuery2$.loading,\n      data = _useLazyQuery2$.data,\n      error = _useLazyQuery2$.error;\n\n  var items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  var findItemsButChill = debounce(findItems, 350);\n  resetIdCounter(); // method from Downshift to handle SSR issues, like: ***Prop `aria-controls` did not match. Server: \"downshift-5-menu\" Client: \"downshift-1-menu\"***\n\n  var _useCombobox = useCombobox({\n    items: [],\n    onInputValueChange: function onInputValueChange() {\n      console.log('Input changed');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n    onSelectedItemChange: function onSelectedItemChange() {\n      console.log('Selected Item change');\n    }\n  }),\n      inputValue = _useCombobox.inputValue,\n      getMenuProps = _useCombobox.getMenuProps,\n      getInputProps = _useCombobox.getInputProps,\n      getComboboxProps = _useCombobox.getComboboxProps,\n      getItemProps = _useCombobox.getItemProps;\n\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an Item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n          item: item\n        })), {}, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo.image.publicUrlTransformed,\n            alt: item.name,\n            width: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this), item.name]\n        }), item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"TFLmfTXg/fJ1aA2lqd5F3GDJGH4=\", false, function () {\n  return [useLazyQuery, useCombobox];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","fetchPolicy","findItems","loading","data","error","items","searchTerms","findItemsButChill","onInputValueChange","console","log","variables","searchTerm","inputValue","onSelectedItemChange","getMenuProps","getInputProps","getComboboxProps","getItemProps","type","placeholder","id","className","map","item","photo","image","publicUrlTransformed","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,IAAMC,qBAAqB,GAAGL,GAAH,mBAA3B;AAsBA,eAAe,SAASM,MAAT,GAAkB;AAAA;;AAAA;;AAAA,sBACeT,YAAY,CACxDQ,qBADwD,EAExD;AACEE,IAAAA,WAAW,EAAE;AADf,GAFwD,CAD3B;AAAA;AAAA,MACxBC,SADwB;AAAA;AAAA,MACXC,OADW,mBACXA,OADW;AAAA,MACFC,IADE,mBACFA,IADE;AAAA,MACIC,KADJ,mBACIA,KADJ;;AAQ/B,MAAMC,KAAK,GAAG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,WAAN,KAAqB,EAAnC;AAEA,MAAMC,iBAAiB,GAAGb,QAAQ,CAACO,SAAD,EAAY,GAAZ,CAAlC;AAEAV,EAAAA,cAAc,GAZiB,CAYb;;AAZa,qBAoB3BC,WAAW,CAAC;AACda,IAAAA,KAAK,EAAE,EADO;AAEdG,IAAAA,kBAFc,gCAEO;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAH,MAAAA,iBAAiB,CAAC;AAChBI,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAEC;AADH;AADK,OAAD,CAAjB;AAKD,KATa;AAWdC,IAAAA,oBAXc,kCAWS;AACrBL,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AAba,GAAD,CApBgB;AAAA,MAe7BG,UAf6B,gBAe7BA,UAf6B;AAAA,MAgB7BE,YAhB6B,gBAgB7BA,YAhB6B;AAAA,MAiB7BC,aAjB6B,gBAiB7BA,aAjB6B;AAAA,MAkB7BC,gBAlB6B,gBAkB7BA,gBAlB6B;AAAA,MAmB7BC,YAnB6B,gBAmB7BA,YAnB6B;;AAoC/B,sBACE,QAAC,YAAD;AAAA,4BACE,+CAASD,gBAAgB,EAAzB;AAAA,6BACE,mCACMD,aAAa,CAAC;AAChBG,QAAAA,IAAI,EAAE,QADU;AAEhBC,QAAAA,WAAW,EAAE,oBAFG;AAGhBC,QAAAA,EAAE,EAAE,QAHY;AAIhBC,QAAAA,SAAS,EAAEpB,OAAO,GAAG,SAAH,GAAe;AAJjB,OAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,QAAD,kCAAca,YAAY,EAA1B;AAAA,gBACGV,KAAK,CAACkB,GAAN,CAAU,UAACC,IAAD;AAAA,4BACT,QAAC,YAAD,kCAAgCN,YAAY,CAAC;AAAEM,UAAAA,IAAI,EAAJA;AAAF,SAAD,CAA5C;AAAA,kCACE;AACE,YAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,oBADxB;AAEE,YAAA,GAAG,EAAEH,IAAI,CAACI,IAFZ;AAGE,YAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,mBADF,EAMGJ,IAAI,CAACI,IANR;AAAA,YAAmBJ,IAAI,CAACH,EAAxB;AAAA;AAAA;AAAA;AAAA,iBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA9DuBtB,M;UACwBT,Y,EAmB1CE,W;;;KApBkBO,M","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    searchTerms: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      # rename Keystone query to our own\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nexport default function Search() {\n  const [findItems, { loading, data, error }] = useLazyQuery(\n    SEARCH_PRODUCTS_QUERY,\n    {\n      fetchPolicy: 'no-cache',\n    }\n  );\n\n  const items = data?.searchTerms || [];\n\n  const findItemsButChill = debounce(findItems, 350);\n\n  resetIdCounter(); // method from Downshift to handle SSR issues, like: ***Prop `aria-controls` did not match. Server: \"downshift-5-menu\" Client: \"downshift-1-menu\"***\n\n  const {\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n  } = useCombobox({\n    items: [],\n    onInputValueChange() {\n      console.log('Input changed');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue,\n        },\n      });\n    },\n\n    onSelectedItemChange() {\n      console.log('Selected Item change');\n    },\n  });\n\n  return (\n    <SearchStyles>\n      <div {...getComboboxProps()}>\n        <input\n          {...getInputProps({\n            type: 'search',\n            placeholder: 'Search for an Item',\n            id: 'search',\n            className: loading ? 'loading' : '',\n          })}\n        />\n      </div>\n      <DropDown {...getMenuProps()}>\n        {items.map((item) => (\n          <DropDownItem key={item.id} {...getItemProps({ item })}>\n            <img\n              src={item.photo.image.publicUrlTransformed}\n              alt={item.name}\n              width=\"50\"\n            />\n            {item.name}\n          </DropDownItem>\n        ))}\n      </DropDown>\n    </SearchStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}