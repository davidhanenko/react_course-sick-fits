{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/lib/CartState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { func } from 'prop-types';\nimport { createContext, useContext, useState } from 'react';\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  // This is our own custom provider. We will store date(state) and functionality (updaters) in here and anyone can access it via the consumer.\n  var _useState = useState(false),\n      cartOpen = _useState[0],\n      setCartOpen = _useState[1];\n\n  fun;\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen: cartOpen,\n      setCartOpen: setCartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\n_s(CartStateProvider, \"xe1WncxGrJWPKk54fyWehQszVXg=\");\n\n_c = CartStateProvider;\n\nfunction useCart() {\n  _s2();\n\n  // We use a consumer here to access the lacal state\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s2(useCart, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { CartStateProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartStateProvider\");","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/lib/CartState.js"],"names":["func","createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","fun","useCart","all"],"mappings":";;;;;;AAAA,SAASA,IAAT,QAAqB,YAArB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,IAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,IAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,OAAyC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACvC;AADuC,kBAGPL,QAAQ,CAAC,KAAD,CAHD;AAAA,MAGhCM,QAHgC;AAAA,MAGtBC,WAHsB;;AAKvCC,EAAAA,GAAG;AAEH,sBACE,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,WAAW,EAAXA;AAAZ,KAA3B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;;;GAdSD,iB;;KAAAA,iB;;AAeT,SAASK,OAAT,GAAmB;AAAA;;AACjB;AACA,MAAMC,GAAG,GAAGX,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOS,GAAP;AACD;;IAJQD,O;;AAMT,SAASL,iBAAT,EAA4BK,OAA5B","sourcesContent":["import { func } from 'prop-types';\nimport { createContext, useContext, useState } from 'react';\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({ children }) {\n  // This is our own custom provider. We will store date(state) and functionality (updaters) in here and anyone can access it via the consumer.\n\n  const [cartOpen, setCartOpen] = useState(false);\n\n  fun\n\n  return (\n    <LocalStateProvider value={{ cartOpen, setCartOpen }}>\n      {children}\n    </LocalStateProvider>\n  );\n}\n\n// make a custom hook for accessing the cart local state\nfunction useCart() {\n  // We use a consumer here to access the lacal state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}