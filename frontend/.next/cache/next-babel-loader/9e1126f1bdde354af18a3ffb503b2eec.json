{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/SingleOrder.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport formatMoney from '../lib/formatMoney';\nimport DisplayError from './ErrorMessage';\nconst OrderSingleItemStyles = styled.div.withConfig({\n  displayName: \"SingleOrder__OrderSingleItemStyles\",\n  componentId: \"wuuo2j-0\"\n})([\"display:grid;grid-auto-columns:auto 1fr;grid-auto-flow:column;gap:2rem;img{width:200px;}\"]);\nconst OrderItemsStyles = styled.div.withConfig({\n  displayName: \"SingleOrder__OrderItemsStyles\",\n  componentId: \"wuuo2j-1\"\n})([\"display:grid;grid-auto-columns:auto;gap:4rem;h2{margin-top:5rem;}\"]);\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    Order(where: { id: $id }) {\n      id\n      total\n      charge\n      items {\n        id\n        name\n        quantity\n        price\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction OrderItem({\n  item\n}) {\n  return /*#__PURE__*/_jsxDEV(OrderSingleItemStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: item.photo.image.publicUrlTransformed,\n      alt: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [item.quantity, \" \\xD7 \", formatMoney(item.price)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function SingleOrder({\n  id\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 21\n  }, this);\n  const {\n    Order\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(OrderItemsStyles, {\n      children: [Order.items.map(item => /*#__PURE__*/_jsxDEV(OrderItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your order total is: \", formatMoney(Order.total)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/SingleOrder.js"],"names":["useQuery","gql","styled","formatMoney","DisplayError","OrderSingleItemStyles","div","OrderItemsStyles","SINGLE_ORDER_QUERY","OrderItem","item","photo","image","publicUrlTransformed","name","quantity","price","SingleOrder","id","data","loading","error","variables","Order","items","map","total"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,qBAAqB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,gGAA3B;AAUA,MAAMC,gBAAgB,GAAGL,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,yEAAtB;AASA,MAAME,kBAAkB,GAAGP,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;;AAqBA,SAASQ,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA6B;AAC3B,sBACE,QAAC,qBAAD;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,oBAA3B;AAAiD,MAAA,GAAG,EAAEH,IAAI,CAACI;AAA3D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKJ,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBACGJ,IAAI,CAACK,QADR,YAC2BZ,WAAW,CAACO,IAAI,CAACM,KAAN,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA6B;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BrB,QAAQ,CAACQ,kBAAD,EAAqB;AAC5Dc,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS;AADiD,GAArB,CAAzC;AAMA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAM;AAAEE,IAAAA;AAAF,MAAYJ,IAAlB;AAEA,sBACE;AAAA,2BACE,QAAC,gBAAD;AAAA,iBACGI,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBf,IAAI,iBACnB,QAAC,SAAD;AAAyB,QAAA,IAAI,EAAEA;AAA/B,SAAgBA,IAAI,CAACQ,EAArB;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAIE;AAAA,4CAA0Bf,WAAW,CAACoB,KAAK,CAACG,KAAP,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport formatMoney from '../lib/formatMoney';\nimport DisplayError from './ErrorMessage';\n\nconst OrderSingleItemStyles = styled.div`\n  display: grid;\n  grid-auto-columns: auto 1fr;\n  grid-auto-flow: column;\n  gap: 2rem;\n  img {\n    width: 200px;\n  }\n`;\n\nconst OrderItemsStyles = styled.div`\n  display: grid;\n  grid-auto-columns: auto;\n  gap: 4rem;\n  h2 {\n    margin-top: 5rem;\n  }\n`;\n\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    Order(where: { id: $id }) {\n      id\n      total\n      charge\n      items {\n        id\n        name\n        quantity\n        price\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction OrderItem({ item }) {\n  return (\n    <OrderSingleItemStyles>\n      <img src={item.photo.image.publicUrlTransformed} alt={item.name} />\n      <h4>{item.name}</h4>\n      <h4>\n        {item.quantity} &times; {formatMoney(item.price)}\n      </h4>\n    </OrderSingleItemStyles>\n  );\n}\n\nexport default function SingleOrder({ id }) {\n  const { data, loading, error } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id,\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <DisplayError error={error} />;\n\n  const { Order } = data;\n\n  return (\n    <div>\n      <OrderItemsStyles>\n        {Order.items.map(item => (\n          <OrderItem key={item.id} item={item} />\n        ))}\n        <h2>Your order total is: {formatMoney(Order.total)}</h2>\n      </OrderItemsStyles>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}