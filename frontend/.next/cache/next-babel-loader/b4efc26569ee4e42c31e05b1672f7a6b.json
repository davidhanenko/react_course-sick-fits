{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/RequestReset.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    sendUserPasswordResetLink(email: $email) {\n      code\n      message\n    }\n  }\n`;\nexport default function RequestReset() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: ''\n  });\n  const [signup, {\n    data,\n    loading,\n    error\n  }] = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await signup().catch(console.error);\n    resetForm(); // Send the email and passwort to the graphQL API\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request a Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.sendUserPasswordResetLink) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success! Check your email for a link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/RequestReset.js"],"names":["useMutation","gql","useForm","Form","Error","REQUEST_RESET_MUTATION","RequestReset","inputs","handleChange","resetForm","email","signup","data","loading","error","variables","handleSubmit","e","preventDefault","catch","console","sendUserPasswordResetLink"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,sBAAsB,GAAGJ,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASK,YAAT,GAAwB;AACrC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCP,OAAO,CAAC;AAClDQ,IAAAA,KAAK,EAAE;AAD2C,GAAD,CAAnD;AAIA,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAT,IAAqCd,WAAW,CACpDK,sBADoD,EAEpD;AACEU,IAAAA,SAAS,EAAER;AADb,GAFoD,CAAtD;;AAOA,iBAAeS,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMP,MAAM,GAAGQ,KAAT,CAAeC,OAAO,CAACN,KAAvB,CAAN;AACAL,IAAAA,SAAS,GAHoB,CAI7B;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEO,YAA9B;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAA,iBACG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,yBAAN,MAAoC,IAApC,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEd,MAAM,CAACG,KALhB;AAME,UAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAiBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD","sourcesContent":["import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    sendUserPasswordResetLink(email: $email) {\n      code\n      message\n    }\n  }\n`;\n\nexport default function RequestReset() {\n  const { inputs, handleChange, resetForm } = useForm({\n    email: '',\n  });\n\n  const [signup, { data, loading, error }] = useMutation(\n    REQUEST_RESET_MUTATION,\n    {\n      variables: inputs,\n    }\n  );\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await signup().catch(console.error);\n    resetForm();\n    // Send the email and passwort to the graphQL API\n  }\n\n  return (\n    <Form method=\"POST\" onSubmit={handleSubmit}>\n      {/* method \"POST\" will not let password go to url/must have!!! */}\n      <h2>Request a Password Reset</h2>\n\n      <Error error={error} />\n\n      <fieldset>\n        {data?.sendUserPasswordResetLink === null && (\n          <p>Success! Check your email for a link</p>\n        )}\n\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email Address\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Request Reset</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}