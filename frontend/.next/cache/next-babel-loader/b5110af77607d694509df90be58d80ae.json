{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/Checkout.js\";\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport nProgress from 'nprogress';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport SickButton from './styles/SickButton';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]); // Stripes\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handleSubmit(e) {\n    // 1. Stop form from submiting & turn the loader on\n    e.preventDefault();\n    setLoading(true); // 2. Start the page transition\n\n    nProgress.start(); // 3. Create the payment method via stripe(Token comes back here if successful)\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod); // 4. Handle any errors from Stripe\n\n    if (error) {\n      setError(error);\n    } // 5. Send the token from step 3 to uur keystone server, via a custom mutation\n    // 6. Change the page to view the order\n    // 7. Close the cart\n    // 8. Turn the loader off\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/Checkout.js"],"names":["CardElement","Elements","useElements","useStripe","loadStripe","nProgress","useState","styled","SickButton","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","handleSubmit","e","preventDefault","start","paymentMethod","createPaymentMethod","type","card","getElement","console","log","Checkout"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,SAA7C,QAA8D,yBAA9D;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,MAAMC,kBAAkB,GAAGF,MAAM,CAACG,IAAV;AAAA;AAAA;AAAA,8IAAxB,C,CASA;;AACA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,EAAtC;AACA,QAAMc,MAAM,GAAGjB,SAAS,EAAxB;AACA,QAAMkB,QAAQ,GAAGnB,WAAW,EAA5B;;AAEA,iBAAeoB,YAAf,CAA4BC,CAA5B,EAA+B;AAC7B;AACAA,IAAAA,CAAC,CAACC,cAAF;AAEAL,IAAAA,UAAU,CAAC,IAAD,CAAV,CAJ6B,CAM7B;;AACAd,IAAAA,SAAS,CAACoB,KAAV,GAP6B,CAS7B;;AACA,UAAM;AAAET,MAAAA,KAAF;AAASU,MAAAA;AAAT,QAA2B,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoB9B,WAApB;AAF0D,KAA3B,CAAvC;AAIA+B,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ,EAd6B,CAe7B;;AACA,QAAGV,KAAH,EAAU;AACRC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAlB4B,CAmB7B;AACA;AACA;AACA;;AACD;;AAED,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEM,YAA9B;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,SAASW,QAAT,GAAoB;AAClB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEtB,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,SAASsB,QAAT","sourcesContent":["import { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport nProgress from 'nprogress';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport SickButton from './styles/SickButton';\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\n// Stripes\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handleSubmit(e) {\n    // 1. Stop form from submiting & turn the loader on\n    e.preventDefault();\n\n    setLoading(true);\n\n    // 2. Start the page transition\n    nProgress.start();\n\n    // 3. Create the payment method via stripe(Token comes back here if successful)\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n    console.log(paymentMethod);\n    // 4. Handle any errors from Stripe\n    if(error) {\n      setError(error)\n    }\n    // 5. Send the token from step 3 to uur keystone server, via a custom mutation\n    // 6. Change the page to view the order\n    // 7. Close the cart\n    // 8. Turn the loader off\n  }\n\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}