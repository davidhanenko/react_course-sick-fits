{"ast":null,"code":"// import { useMutation } from '@apollo/client';\n// import gql from 'graphql-tag';\n// import useForm from '../lib/useForm';\n// import Form from './styles/Form';\n// import Error from './ErrorMessage';\n// const RESET_MUTATION = gql`\n//   mutation RESET_MUTATION(\n//     $email: String!\n//     $password: String!\n//     $token: String!\n//   ) {\n//     redeemUserPasswordResetToken(\n//       email: $email\n//       token: $token\n//       password: $password\n//     ) {\n//       code\n//       message\n//     }\n//   }\n// `;\n// export default function Reset({ token }) {\n//   const { inputs, handleChange, resetForm } = useForm({\n//     email: '',\n//     password: '',\n//     token,\n//   });\n//   const [reset, { data, loading }] = useMutation(RESET_MUTATION, {\n//     variables: inputs,\n//   });\n//   const error = data?.redeemUserPasswordResetToken?.code\n//     ? data?.redeemUserPasswordResetToken\n//     : undefined;\n//   console.log(error);\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     await reset().catch(console.error);\n//     resetForm();\n//     // Send the email and passwort to the graphQL API\n//   }\n//   return (\n//     <Form method=\"POST\" onSubmit={handleSubmit}>\n//       {/* method \"POST\" will not let password go to url/must have!!! */}\n//       <h2>Reset Your Password</h2>\n//       <Error error={error} />\n//       <fieldset>\n//         {data?.sendUserPasswordResetLink === null && (\n//           <p>Success! You can Now Sign In</p>\n//         )}\n//         <label htmlFor=\"email\">\n//           Email\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Your Email Address\"\n//             autoComplete=\"email\"\n//             value={inputs.email}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label htmlFor=\"password\">\n//           Password\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//             autoComplete=\"password\"\n//             value={inputs.password}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <button type=\"submit\">Request Reset</button>\n//       </fieldset>\n//     </Form>\n//   );\n// }","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/components/Reset.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import { useMutation } from '@apollo/client';\n// import gql from 'graphql-tag';\n// import useForm from '../lib/useForm';\n// import Form from './styles/Form';\n// import Error from './ErrorMessage';\n\n// const RESET_MUTATION = gql`\n//   mutation RESET_MUTATION(\n//     $email: String!\n//     $password: String!\n//     $token: String!\n//   ) {\n//     redeemUserPasswordResetToken(\n//       email: $email\n//       token: $token\n//       password: $password\n//     ) {\n//       code\n//       message\n//     }\n//   }\n// `;\n\n// export default function Reset({ token }) {\n//   const { inputs, handleChange, resetForm } = useForm({\n//     email: '',\n//     password: '',\n//     token,\n//   });\n\n//   const [reset, { data, loading }] = useMutation(RESET_MUTATION, {\n//     variables: inputs,\n//   });\n\n//   const error = data?.redeemUserPasswordResetToken?.code\n//     ? data?.redeemUserPasswordResetToken\n//     : undefined;\n\n//   console.log(error);\n\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     await reset().catch(console.error);\n//     resetForm();\n//     // Send the email and passwort to the graphQL API\n//   }\n\n//   return (\n//     <Form method=\"POST\" onSubmit={handleSubmit}>\n//       {/* method \"POST\" will not let password go to url/must have!!! */}\n//       <h2>Reset Your Password</h2>\n\n//       <Error error={error} />\n\n//       <fieldset>\n//         {data?.sendUserPasswordResetLink === null && (\n//           <p>Success! You can Now Sign In</p>\n//         )}\n\n//         <label htmlFor=\"email\">\n//           Email\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Your Email Address\"\n//             autoComplete=\"email\"\n//             value={inputs.email}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label htmlFor=\"password\">\n//           Password\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//             autoComplete=\"password\"\n//             value={inputs.password}\n//             onChange={handleChange}\n//           />\n//         </label>\n\n//         <button type=\"submit\">Request Reset</button>\n//       </fieldset>\n//     </Form>\n//   );\n// }\n\n"]},"metadata":{},"sourceType":"script"}