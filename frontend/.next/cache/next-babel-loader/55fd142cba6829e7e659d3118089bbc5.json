{"ast":null,"code":"export default function paginationField() {\n  return {\n    keyArgs: false,\n\n    // tells Apollo we will take care of everything\n    read(existing = [], {\n      args,\n      cache\n    }) {\n      consolke.log(existing); // First thing it does, it asks the read function for those items\n      // Wecan do 2 things:\n      // 1st - return the items because they are already in the cache\n      // 2nd - return false from here (network requestr)\n    },\n\n    merge() {// This runs when the Apollo client comes back from the network with our products\n    }\n\n  };\n}","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/lib/paginationField.js"],"names":["paginationField","keyArgs","read","existing","args","cache","consolke","log","merge"],"mappings":"AAAA,eAAe,SAASA,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,OAAO,EAAE,KADJ;;AACW;AAChBC,IAAAA,IAAI,CAACC,QAAQ,GAAG,EAAZ,EAAgB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhB,EAAiC;AACnCC,MAAAA,QAAQ,CAACC,GAAT,CAAaJ,QAAb,EADmC,CAEnC;AACA;AACA;AACA;AACD,KARI;;AASLK,IAAAA,KAAK,GAAG,CACN;AACD;;AAXI,GAAP;AAaD","sourcesContent":["export default function paginationField() {\n  return {\n    keyArgs: false, // tells Apollo we will take care of everything\n    read(existing = [], { args, cache }) {\n      consolke.log(existing, )\n      // First thing it does, it asks the read function for those items\n      // Wecan do 2 things:\n      // 1st - return the items because they are already in the cache\n      // 2nd - return false from here (network requestr)\n    },\n    merge() {\n      // This runs when the Apollo client comes back from the network with our products\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}