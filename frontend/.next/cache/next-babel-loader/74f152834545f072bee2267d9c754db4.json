{"ast":null,"code":"export default function paginationField() {\n  return {\n    keyArgs: false,\n    // tells Apollo we will take care of everything\n    read: function read() {// First thing it does, it asks the read function for those items\n      // Wecan do 2 things:\n      // 1st - return the items because they are already in the cache\n      // 2nd - return false from here (network requestr)\n\n      var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    },\n    merge: function merge() {// This runs when the Apollo client comes back from the network with our products\n    }\n  };\n}","map":{"version":3,"sources":["/Volumes/Files/Learning/React/Advanced-React-master/sick-fits/frontend/lib/paginationField.js"],"names":["paginationField","keyArgs","read","existing","merge"],"mappings":"AAAA,eAAe,SAASA,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,OAAO,EAAE,KADJ;AACW;AAChBC,IAAAA,IAFK,kBAEiB,CACpB;AACA;AACA;AACA;;AAJoB,UAAjBC,QAAiB,uEAAN,EAAM;AAKrB,KAPI;AAQLC,IAAAA,KARK,mBAQG,CACN;AACD;AAVI,GAAP;AAYD","sourcesContent":["export default function paginationField() {\n  return {\n    keyArgs: false, // tells Apollo we will take care of everything\n    read(existing = [], ) {\n      // First thing it does, it asks the read function for those items\n      // Wecan do 2 things:\n      // 1st - return the items because they are already in the cache\n      // 2nd - return false from here (network requestr)\n    },\n    merge() {\n      // This runs when the Apollo client comes back from the network with our products\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}